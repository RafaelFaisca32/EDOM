package generates;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import static java.lang.System.exit;

public class MainMenu {
	
	public static Project createProject() {
	
		List<Target> targetList = new ArrayList<>();
		List<Task> taskList = new ArrayList<>();
		List<Property> propList = new ArrayList<>();
		List<Property> propListDecision = new ArrayList<>();
		List<Action> actionList = new ArrayList<>();
		List<Decision> decisionList = new ArrayList<>();
		List<Condition> conditionList = new ArrayList<>();


		propList.add(new Property("Del","del" ));
				conditionList.add(new Condition("if"));
					propListDecision.add(new Property("IsTempFile","boolean "));
			decisionList.add(new Decision(propListDecision,conditionList));
			conditionList = new ArrayList<>();
			propListDecision = new ArrayList<>();
	actionList.add(new Action("Delete jar files",decisionList));
	decisionList = new ArrayList<>();
taskList.add(new Task("DeleteFiles","task to delete the temporary files generated by the build",propList,actionList,null));
actionList = new ArrayList<>();
propList = new ArrayList<>();
actionList = new ArrayList<>();

		propList.add(new Property("Build","build" ));
targetList.add(new Target("Build Classes ", new File("BuildClasses.c"), new File("BuildClasses.o"),new Task("Build classes","this c class is responsible of building other classes",propList,actionList,null),null));
propList = new ArrayList<>();
actionList = new ArrayList<>();
		propList.add(new Property("BuildDep","buildDep" ));
targetList.add(new Target("Dependencies", new File("BuildDependencies.c"), new File("BuildDependencies.o"),new Task("Build dependencies","this class is responsible for the connecting the dependencies",propList,actionList,null),null));
propList = new ArrayList<>();
actionList = new ArrayList<>();
		propList.add(new Property("Lib","lib" ));
targetList.add(new Target("Info", new File("InfoBuilder.c"), new File("InfoBuilder.lib"),new Task("InformationLibrary","File contains a library of information used by a specific program. It may store a variety of information.",propList,actionList,null),null));
propList = new ArrayList<>();
actionList = new ArrayList<>();
		propList.add(new Property("Dec","dec" ));
targetList.add(new Target("Declarations", new File("header.c"), new File("header.h"),new Task("DeclarationsToShare","C function declarations and macro definitions to be shared between several source files.",propList,actionList,null),null));
propList = new ArrayList<>();
actionList = new ArrayList<>();

Project project = new Project("CBuilder","v.22.30.2",targetList,taskList);
		return project;

	}
		
	public static void executeMenu(Project project) {
		
		boolean exit = false;
		Scanner input = new Scanner(System.in);
		
		while (!exit) {

			System.out.println(" # JavaBuilder ");
			System.out.println(" Please select one option:");
					
			System.out.println("0 - Exit");
			System.out.println("1 - Execute Tasks");
					
			String line = input.nextLine();
			int num = Integer.valueOf(line);
					
			switch (num) {
				case 0:
					exit = true;
					break;
				case 1:
					TaskMenu.executeMenu(project);
			}
		}
		exit(0);
	}
}



