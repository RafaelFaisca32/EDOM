/*
 * generated by Xtext 2.25.0
 */
package org.xtext.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.ide.contentassist.antlr.internal.InternalProject2Parser;
import org.xtext.services.Project2GrammarAccess;

public class Project2Parser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(Project2GrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, Project2GrammarAccess grammarAccess) {
			builder.put(grammarAccess.getActionAccess().getAlternatives(), "rule__Action__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getProjectAccess().getGroup(), "rule__Project__Group__0");
			builder.put(grammarAccess.getProjectAccess().getGroup_3(), "rule__Project__Group_3__0");
			builder.put(grammarAccess.getProjectAccess().getGroup_7(), "rule__Project__Group_7__0");
			builder.put(grammarAccess.getProjectAccess().getGroup_12(), "rule__Project__Group_12__0");
			builder.put(grammarAccess.getTargetAccess().getGroup(), "rule__Target__Group__0");
			builder.put(grammarAccess.getTargetAccess().getGroup_3(), "rule__Target__Group_3__0");
			builder.put(grammarAccess.getTargetAccess().getGroup_3_3(), "rule__Target__Group_3_3__0");
			builder.put(grammarAccess.getTaskAccess().getGroup(), "rule__Task__Group__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_4(), "rule__Task__Group_4__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_5(), "rule__Task__Group_5__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_5_3(), "rule__Task__Group_5_3__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_6(), "rule__Task__Group_6__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_6_3(), "rule__Task__Group_6_3__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_7(), "rule__Task__Group_7__0");
			builder.put(grammarAccess.getTaskAccess().getGroup_7_3(), "rule__Task__Group_7_3__0");
			builder.put(grammarAccess.getFileAccess().getGroup(), "rule__File__Group__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup_4(), "rule__Property__Group_4__0");
			builder.put(grammarAccess.getAction_ImplAccess().getGroup(), "rule__Action_Impl__Group__0");
			builder.put(grammarAccess.getAction_ImplAccess().getGroup_4(), "rule__Action_Impl__Group_4__0");
			builder.put(grammarAccess.getAction_ImplAccess().getGroup_4_3(), "rule__Action_Impl__Group_4_3__0");
			builder.put(grammarAccess.getDecisionAccess().getGroup(), "rule__Decision__Group__0");
			builder.put(grammarAccess.getDecisionAccess().getGroup_2(), "rule__Decision__Group_2__0");
			builder.put(grammarAccess.getDecisionAccess().getGroup_2_3(), "rule__Decision__Group_2_3__0");
			builder.put(grammarAccess.getDecisionAccess().getGroup_6(), "rule__Decision__Group_6__0");
			builder.put(grammarAccess.getInstructionBlockAccess().getGroup(), "rule__InstructionBlock__Group__0");
			builder.put(grammarAccess.getInstructionBlockAccess().getGroup_3(), "rule__InstructionBlock__Group_3__0");
			builder.put(grammarAccess.getInstructionBlockAccess().getGroup_3_3(), "rule__InstructionBlock__Group_3_3__0");
			builder.put(grammarAccess.getInstructionBlockAccess().getGroup_7(), "rule__InstructionBlock__Group_7__0");
			builder.put(grammarAccess.getStartAccess().getGroup(), "rule__Start__Group__0");
			builder.put(grammarAccess.getStartAccess().getGroup_4(), "rule__Start__Group_4__0");
			builder.put(grammarAccess.getStartAccess().getGroup_5(), "rule__Start__Group_5__0");
			builder.put(grammarAccess.getStartAccess().getGroup_5_3(), "rule__Start__Group_5_3__0");
			builder.put(grammarAccess.getEndAccess().getGroup(), "rule__End__Group__0");
			builder.put(grammarAccess.getEndAccess().getGroup_4(), "rule__End__Group_4__0");
			builder.put(grammarAccess.getEndAccess().getGroup_4_3(), "rule__End__Group_4_3__0");
			builder.put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
			builder.put(grammarAccess.getConditionAccess().getGroup_3(), "rule__Condition__Group_3__0");
			builder.put(grammarAccess.getInstructionAccess().getGroup(), "rule__Instruction__Group__0");
			builder.put(grammarAccess.getModelAccess().getNameAssignment_1(), "rule__Model__NameAssignment_1");
			builder.put(grammarAccess.getModelAccess().getProjectAssignment_4(), "rule__Model__ProjectAssignment_4");
			builder.put(grammarAccess.getProjectAccess().getNameAssignment_1(), "rule__Project__NameAssignment_1");
			builder.put(grammarAccess.getProjectAccess().getVersionAssignment_3_1(), "rule__Project__VersionAssignment_3_1");
			builder.put(grammarAccess.getProjectAccess().getTargetAssignment_6(), "rule__Project__TargetAssignment_6");
			builder.put(grammarAccess.getProjectAccess().getTargetAssignment_7_1(), "rule__Project__TargetAssignment_7_1");
			builder.put(grammarAccess.getProjectAccess().getTasksAssignment_11(), "rule__Project__TasksAssignment_11");
			builder.put(grammarAccess.getProjectAccess().getTasksAssignment_12_1(), "rule__Project__TasksAssignment_12_1");
			builder.put(grammarAccess.getTargetAccess().getNameAssignment_1(), "rule__Target__NameAssignment_1");
			builder.put(grammarAccess.getTargetAccess().getDependenciesAssignment_3_2(), "rule__Target__DependenciesAssignment_3_2");
			builder.put(grammarAccess.getTargetAccess().getDependenciesAssignment_3_3_1(), "rule__Target__DependenciesAssignment_3_3_1");
			builder.put(grammarAccess.getTargetAccess().getHasAssignment_5(), "rule__Target__HasAssignment_5");
			builder.put(grammarAccess.getTargetAccess().getOutputAssignment_7(), "rule__Target__OutputAssignment_7");
			builder.put(grammarAccess.getTargetAccess().getInputAssignment_9(), "rule__Target__InputAssignment_9");
			builder.put(grammarAccess.getTaskAccess().getNameAssignment_2(), "rule__Task__NameAssignment_2");
			builder.put(grammarAccess.getTaskAccess().getDescriptionAssignment_4_1(), "rule__Task__DescriptionAssignment_4_1");
			builder.put(grammarAccess.getTaskAccess().getDependsAssignment_5_2(), "rule__Task__DependsAssignment_5_2");
			builder.put(grammarAccess.getTaskAccess().getDependsAssignment_5_3_1(), "rule__Task__DependsAssignment_5_3_1");
			builder.put(grammarAccess.getTaskAccess().getHasAssignment_6_2(), "rule__Task__HasAssignment_6_2");
			builder.put(grammarAccess.getTaskAccess().getHasAssignment_6_3_1(), "rule__Task__HasAssignment_6_3_1");
			builder.put(grammarAccess.getTaskAccess().getActionsAssignment_7_2(), "rule__Task__ActionsAssignment_7_2");
			builder.put(grammarAccess.getTaskAccess().getActionsAssignment_7_3_1(), "rule__Task__ActionsAssignment_7_3_1");
			builder.put(grammarAccess.getFileAccess().getNameAssignment_2(), "rule__File__NameAssignment_2");
			builder.put(grammarAccess.getPropertyAccess().getNameAssignment_2(), "rule__Property__NameAssignment_2");
			builder.put(grammarAccess.getPropertyAccess().getValueAssignment_4_1(), "rule__Property__ValueAssignment_4_1");
			builder.put(grammarAccess.getAction_ImplAccess().getNameAssignment_2(), "rule__Action_Impl__NameAssignment_2");
			builder.put(grammarAccess.getAction_ImplAccess().getDecisionsAssignment_4_2(), "rule__Action_Impl__DecisionsAssignment_4_2");
			builder.put(grammarAccess.getAction_ImplAccess().getDecisionsAssignment_4_3_1(), "rule__Action_Impl__DecisionsAssignment_4_3_1");
			builder.put(grammarAccess.getDecisionAccess().getHasAssignment_2_2(), "rule__Decision__HasAssignment_2_2");
			builder.put(grammarAccess.getDecisionAccess().getHasAssignment_2_3_1(), "rule__Decision__HasAssignment_2_3_1");
			builder.put(grammarAccess.getDecisionAccess().getConditionAssignment_5(), "rule__Decision__ConditionAssignment_5");
			builder.put(grammarAccess.getDecisionAccess().getConditionAssignment_6_1(), "rule__Decision__ConditionAssignment_6_1");
			builder.put(grammarAccess.getInstructionBlockAccess().getNameAssignment_1(), "rule__InstructionBlock__NameAssignment_1");
			builder.put(grammarAccess.getInstructionBlockAccess().getDecisionsAssignment_3_2(), "rule__InstructionBlock__DecisionsAssignment_3_2");
			builder.put(grammarAccess.getInstructionBlockAccess().getDecisionsAssignment_3_3_1(), "rule__InstructionBlock__DecisionsAssignment_3_3_1");
			builder.put(grammarAccess.getInstructionBlockAccess().getHasAssignment_6(), "rule__InstructionBlock__HasAssignment_6");
			builder.put(grammarAccess.getInstructionBlockAccess().getHasAssignment_7_1(), "rule__InstructionBlock__HasAssignment_7_1");
			builder.put(grammarAccess.getStartAccess().getNameAssignment_2(), "rule__Start__NameAssignment_2");
			builder.put(grammarAccess.getStartAccess().getNextAssignment_4_1(), "rule__Start__NextAssignment_4_1");
			builder.put(grammarAccess.getStartAccess().getDecisionsAssignment_5_2(), "rule__Start__DecisionsAssignment_5_2");
			builder.put(grammarAccess.getStartAccess().getDecisionsAssignment_5_3_1(), "rule__Start__DecisionsAssignment_5_3_1");
			builder.put(grammarAccess.getEndAccess().getNameAssignment_2(), "rule__End__NameAssignment_2");
			builder.put(grammarAccess.getEndAccess().getDecisionsAssignment_4_2(), "rule__End__DecisionsAssignment_4_2");
			builder.put(grammarAccess.getEndAccess().getDecisionsAssignment_4_3_1(), "rule__End__DecisionsAssignment_4_3_1");
			builder.put(grammarAccess.getConditionAccess().getValueAssignment_3_1(), "rule__Condition__ValueAssignment_3_1");
			builder.put(grammarAccess.getInstructionAccess().getNameAssignment_2(), "rule__Instruction__NameAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private Project2GrammarAccess grammarAccess;

	@Override
	protected InternalProject2Parser createParser() {
		InternalProject2Parser result = new InternalProject2Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public Project2GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(Project2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
