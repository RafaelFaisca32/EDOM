/*
 * generated by Xtext 2.28.0
 */
package pt.isep.edom.xtext.assignment1.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import pt.isep.edom.assignment1.Model
import pt.isep.edom.assignment1.Project
import pt.isep.edom.xtext.assignment1.services.DslGrammarAccess

class DslFormatter extends AbstractFormatter2 {
	
	@Inject extension DslGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		model.project.format
	}

	def dispatch void format(Project project, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (target : project.target) {
			target.format
		}
		for (task : project.tasks) {
			task.format
		}
	}
	
	// TODO: implement for Target, Task, Action, InstructionBlock, Decision, ClosureBackedAction, DefaultAction, CustomAction, Start, End, IfDecision, WhileDecision, LoopDecision, Condition
}
